[[plugins]]
repository = 'ahayman/vim-nodejs-complete'
on_ft = 'javascript'

[[plugins]]
repository = 'artur-shaik/vim-javacomplete2'
on_ft = 'java'
disabled = """
filereadable(expand('~/.eclim/.eclimd_instances')) \
|| !executable('mvn') || !has('python')"""
vim_version = '7.4.0'

[[plugins]]
repository = 'airblade/vim-rooter'
on_map = '<Plug>RooterChangeToRootDirectory'

[[plugins]]
repository = 'Align'
on_cmd = ['Align', 'AlignCtrl']
on_map = '<Plug>AM_'

[[plugins]]
repository = 'AnsiEsc.vim'
on_cmd = 'AnsiEsc'

[[plugins]]
repository = 'c9s/perlomni.vim'
on_ft = 'perl'

[[plugins]]
repository = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]]
repository = 'davidhalter/jedi-vim'
on_ft = 'python'
depends = 'davidhalter/jedi'

[[plugins]]
repository = 'dbext.vim'

[[plugins]]
repository = 'fatih/vim-go'
on_ft = 'go'

[[plugins]]
repository = 'flazz/vim-colorschemes'
gui = 1

[[plugins]]
repository = 'godlygeek/tabular'
on_cmd = ['Tab', 'Tabularize']

[[plugins]]
repository = 'haya14busa/incsearch.vim'
on_map = [
  '<Plug>(incsearch-forward)',
  '<Plug>(incsearch-backward)',
  '<Plug>(incsearch-stay)',
  '<Plug>(incsearch-nohl-n)',
  '<Plug>(incsearch-nohl-N)',
  '<Plug>(incsearch-nohl-*)',
  '<Plug>(incsearch-nohl-#)',
  '<Plug>(incsearch-nohl-g*)',
  '<Plug>(incsearch-nohl-g#)',
]
disabled = '&filetype == "man" && has("macunix")'

[[plugins]]
repository = 'hotchpotch/perldoc-vim'
on_ft = 'perl'
on_cmd = 'Perldoc'

[[plugins]]
repository = 'jalcine/cmake.vim'
# on_ft = ['c', 'cpp']
on_cmd = [
  'CMakeBuild', 'CMakeClean', 'CMakeClearBufferOpts', 'CMakeCtagsBuildAll',
  'CMakeInfoForCurrentFile', 'CMakeRebuildCache', 'CMakeTarget',
  'CMakeBuildCurrent', 'CMakeCleanBuild', 'CMakeCreateBuild',
  'CMakeCtagsBuildCurrent', 'CMakeInstall', 'CMakeRehashProject', 'CMakeTest',
]
vim_version = '7.3'

[[plugins]]
repository = 'jceb/vim-hier'
gui = 1

[[plugins]]
repository = 'jeaye/color_coded'
on_ft = ['c', 'cpp', 'objc', 'objcpp']
build_commands = ['cmake', 'make']
vim_version = '7.4.330'
disabled = """
!has('lua') || (exists('g:disable_color_coded') && g:disable_color_coded)"""
gui = 1

  [plugins.build]
  unix = 'cmake . && make && make install'

[[plugins]]
repository = 'justinmk/vim-sneak'
depends = 'tpope/vim-repeat'
on_map = ['s', 'S']

[[plugins]]
repository = 'kana/vim-altr'
on_ft = ['c', 'cpp']
on_map = ['<Plug>(altr-forward)', '<Plug>(altr-back)']

[[plugins]]
repository = 'kana/vim-niceblock'
on_map = [
  ['x', '<Plug>(niceblock-I)'],
  ['x', '<Plug>(niceblock-A)'],
]

[[plugins]]
repository = 'kana/vim-smartchr'
on_ft = 'cpp'

[[plugins]]
repository = 'kana/vim-textobj-line'
on_map = ['<Plug>(textobj-line-a)', '<Plug>(textobj-line-i)']

[[plugins]]
repository = 'kana/vim-textobj-user'

[[plugins]]
repository = 'kannokanno/previm'
on_cmd = 'PrevimOpen'
on_ft = 'markdown'
depends = 'tyru/open-browser.vim'

[[plugins]]
repository = 'kchmck/vim-coffee-script'
on_ft = 'coffee'

[[plugins]]
repository = 'lambdalisue/vim-gista'
on_cmd = 'Gista'
on_unite = 'gista'

[[plugins]]
repository = 'lervag/vim-latex'
on_ft = 'tex'

[[plugins]]
repository = 'matchit.zip'
on_map = ['%', 'g%']

[[plugins]]
repository = 'mattn/disableitalic-vim'
on_cmd = 'DisableItalic'
gui = 1

[[plugins]]
repository = 'mattn/emmet-vim'
on_ft = ['html', 'xhtml']
on_cmd = ['Emmet', 'EmmetInstall']
on_map = '<Plug>(emmet-'

[[plugins]]
repository = 'mattn/gist-vim'
on_cmd = 'Gist'
depends = 'mattn/webapi-vim'

[[plugins]]
repository = 'mattn/webapi-vim'

[[plugins]]
repository = 'mattn/quickrunex-vim'
depends = 'thinca/vim-quickrun'
on_source = 'vim-quickrun'

[[plugins]]
repository = 'mips.vim'
on_ft = 'asm'

[[plugins]]
repository = 'NigoroJr/rsense'
on_ft = 'ruby'
# When vim-monster can be used
disabled = """
executable('rct-complete') \
&& (!exists('g:use_rsense') || !g:use_rsense)"""

[[plugins]]
repository = 'NigoroJr/unite-matcher-hide-hidden-directories'
depends = 'Shougo/unite.vim'
on_source = 'unite.vim'

[[plugins]]
repository = 'ntpeters/vim-better-whitespace'
on_i = 1
focus = 1

[[plugins]]
repository = 'octol/vim-cpp-enhanced-highlight'
on_ft = 'cpp'

[[plugins]]
repository = 'osyo-manga/shabadou.vim'
depends = 'thinca/vim-quickrun'
on_source = 'vim-quickrun'

[[plugins]]
repository = 'osyo-manga/unite-boost-online-doc'
on_ft = 'cpp'
depends = [
  'Shougo/unite.vim',
  'tyru/open-browser.vim',
  'mattn/webapi-vim',
]

[[plugins]]
repository = 'osyo-manga/unite-quickfix'
depends = 'Shougo/unite.vim'

[[plugins]]
repository = 'osyo-manga/vim-jplus'
on_map = [
  '<Plug>(jplus)', '<Plug>(jplus-getchar)', '<Plug>(jplus-input)',
  '<Plug>(jplus-getchar-with-space)', '<Plug>(jplus-input-with-space)',
]

[[plugins]]
repository = 'osyo-manga/vim-marching'
depends = [
  'Shougo/neocomplete.vim',
  'Shougo/vimproc.vim',
  'osyo-manga/vim-reunions',
]
on_ft = ['c', 'cpp']
on_cmd = 'MarchingBufferClearCache'
on_map = [
  ['i', '<Plug>(marching_force_start_omni_complete)'],
]
disabled = """
(exists('g:use_vim_clang') && g:use_vim_clang) \
|| !executable('clang')"""

[[plugins]]
repository = 'osyo-manga/vim-monster'
on_ft = 'ruby'
depends = 'Shougo/vimproc.vim'
disabled = """
!executable('rct-complete') \
|| (exists('g:use_monster') && !g:use_monster) \
|| (exists('g:use_rsense') && g:use_rsense)"""

[[plugins]]
repository = 'osyo-manga/vim-precious'
on_ft = ['html', 'xhtml', 'markdown']
on_cmd = [
  'PreciousSwitch',
  'PreciousSetContextLocal',
  'PreciousReset',
]
depends = [
  'Shougo/context_filetype.vim',
  'vim-textobj-user',
  'thinca/vim-quickrun',
]

[[plugins]]
repository = 'osyo-manga/vim-snowdrop'
on_ft = 'cpp'
on_cmd = [
  'SnowdropClearLogs',
  'SnowdropEchoClangVersion',
  'SnowdropLogs',
  'SnowdropVerify',
]

[[plugins]]
repository = 'osyo-manga/vim-stargate'
on_cmd = 'StargateInclude'
on_ft = 'cpp'

[[plugins]]
repository = 'osyo-manga/vim-watchdogs'
on_ft = ['c', 'cpp']
depends = ['jceb/vim-hier', 'thinca/vim-quickrun']
gui = 1

  [plugins.on_cmd]
  name = ['WatchdogsRun', 'WatchdogsRunSilent']
  complete = 'customlist,quickrun#complete'

[[plugins]]
repository = 'rhysd/clever-f.vim'
on_map = ['f', 'F', 't', 'T', 'cf', 'ct']

[[plugins]]
repository = 'rhysd/vim-go-impl'
on_ft = 'go'

[[plugins]]
repository = 'thinca/vim-textobj-between'
on_map = ['<Plug>(textobj-between-a)', '<Plug>(textobj-between-i)']
depends = 'kana/vim-textobj-user'

[[plugins]]
repository = 'rhysd/wandbox-vim'
on_cmd = ['Wandbox', 'WandboxAsync']
depends = ['thinca/vim-quickrun', 'Shougo/vimproc.vim']

[[plugins]]
repository = 'Shougo/context_filetype.vim'

[[plugins]]
repository = 'Shougo/neocomplcache-rsense.vim'
depends = ['Shougo/neocomplcache.vim', 'rsense']
on_source = 'rsense'
disabled = 'NeoCompleteCompatible()'

[[plugins]]
repository = 'Shougo/neocomplcache.vim'
depends = 'Shougo/vimproc.vim'
disabled = 'NeoCompleteCompatible()'
on_i = 1

[[plugins]]
repository = 'Shougo/neocomplete.vim'
depends = ['Shougo/vimproc.vim', 'Shougo/context_filetype.vim']
disabled = '!NeoCompleteCompatible()'
on_i = 1

[[plugins]]
repository = 'Shougo/neoinclude.vim'
depends = 'Shougo/neocomplete.vim'
on_source = 'neocomplete.vim'

[[plugins]]
repository = 'Shougo/neomru.vim'
depends = 'Shougo/unite.vim'
on_unite = ['neomru/file', 'neomru/directory']

[[plugins]]
repository = 'Shougo/neosnippet-snippets'
on_source = 'neosnippet.vim'
depends = 'Shougo/neosnippet.vim'

[[plugins]]
repository = 'Shougo/neosnippet.vim'
on_source = ['neocomplcache.vim', 'neocomplete.vim']
on_cmd = 'NeoSnippetEdit'
on_unite = ['neosnippet', 'neosnippet/user', 'neosnippet/runtime']

[[plugins]]
repository = 'Shougo/unite-outline'
depends = 'Shougo/unite.vim'

[[plugins]]
repository = 'Shougo/unite.vim'
depends = 'Shougo/vimproc.vim'

  [plugins.on_cmd]
  name = [
    'Unite',
    'UniteWithBufferDir',
    'UniteWithCurrentDir',
    'UniteWithProjectDir',
    'UniteWithInputDirectory',
    'UniteWithCursorWord',
  ]
  complete = 'customlist,unite#complete#source'

[[plugins]]
repository = 'Shougo/vimfiler.vim'
depends = 'Shougo/unite.vim'
explorer = 1

  [plugins.on_cmd]
  name = [
    'VimFiler',
    'VimFilerCurrentDir',
    'VimFilerBufferDir',
    'VimFilerExplorer',
  ]
  complete = 'customlist,vimfiler#complete'

[[plugins]]
repository = 'Shougo/vimshell.vim'
depends = 'Shougo/vimproc.vim'

  [plugins.on_cmd]
  name = [
    'VimShell',
    'VimShellBufferDir',
    'VimShellCreate',
    'VimShellTab',
    'VimShellPop',
    'VimShellCurrentDir',
    'VimShellExecute',
    'VimShellInteractive',
    'VimShellTerminal',
    'VimShellSendString',
    'VimShellSendBuffer',
  ]
  complete = 'customlist,vimshell#complete'

[[plugins]]
repository = 'Shougo/vinarise.vim'
vim_version = '7.3'

  [plugins.on_cmd]
  name = 'Vinarise'
  complete = 'file'

[[plugins]]
repository = 'slim-template/vim-slim'
on_ft = 'slim'

[[plugins]]
repository = 'starcraftman/vim-eclim'
on_ft = 'java'
on_cmd = 'DeployEclimd'
disabled = '!filereadable(expand("~/.eclim/.eclimd_instances"))'

[[plugins]]
repository = 'sudo.vim'
on_cmd = ['SudoRead', 'SudoWrite']

[[plugins]]
repository = 'supermomonga/neocomplete-rsense.vim'
depends = ['Shougo/neocomplete.vim', 'rsense']
on_source = 'rsense'
disabled = '!NeoCompleteCompatible()'

[[plugins]]
repository = 'supermomonga/unite-kawaii-calc'
depends = 'Shougo/unite.vim'

[[plugins]]
repository = 'TextFormat'
on_cmd = ['AlignCenter', 'AlignJustify', 'AlignRight', 'AlignLeft']

[[plugins]]
repository = 'thinca/vim-ambicmd'
on_map = ':'

[[plugins]]
repository = 'thinca/vim-prettyprint'

  [plugins.on_cmd]
  name = ['PrettyPrint', 'PP']
  complete = 'expression'

[[plugins]]
repository = 'thinca/vim-quickrun'
depends = 'Shougo/vimproc.vim'
on_map = '<Plug>(quickrun)'

  [plugins.on_cmd]
  name = 'QuickRun'
  complete = 'customlist,quickrun#complete'

[[plugins]]
repository = 'thinca/vim-ref'
on_map = '<Plug>(ref-keyword)'
on_unite = 'ref'

  [plugins.on_cmd]
  name = 'Ref'
  complete = 'customlist,ref#complete'

[[plugins]]
repository = 'tkztmk/vim-vala'
on_ft = 'vala'

[[plugins]]
repository = 'tomtom/tcomment_vim'
on_map = [
  'gc', 'g<', 'g>',
  '<Plug>TComment_',
]

[[plugins]]
repository = 'tpope/vim-abolish'
depends = 'tpope/vim-repeat'
on_cmd = ['Abolish', 'Subvert', 'S']
on_map = 'cr'

[[plugins]]
repository = 'tpope/vim-bundler'
on_ft = 'ruby'
on_cmd = 'Bundle'

[[plugins]]
repository = 'tpope/vim-endwise'
on_ft = [
  'aspvbs', 'c', 'cpp', 'crystal', 'elixir', 'htmldjango', 'lua', 'matlab',
  'objc', 'ruby', 'sh', 'snippets', 'vb', 'vbnet', 'vim', 'xdefaults', 'zsh',
]

[[plugins]]
repository = 'tpope/vim-fugitive'
augroup = 'fugitive'
on_cmd = [
  'Git', 'Git!', 'Gcd', 'Glcd', 'Gstatus', 'Gcommit', 'Gmerge', 'Gpull',
  'Gpush', 'Gfetch', 'Ggrep', 'Glgrep', 'Glog', 'Gllog', 'Gedit', 'Gsplit',
  'Gvsplit', 'Gtabedit', 'Gpedit', 'Gsplit!', 'Gvsplit!', 'Gtabedit!',
  'Gpedit!', 'Gread', 'Gread!', 'Gwrite', 'Gwrite', 'Gwq', 'Gwq!', 'Gdiff',
  'Gsdiff', 'Gvdiff', 'Gmove', 'Gremove', 'Gblame',
]

[[plugins]]
repository = 'tpope/vim-markdown'
depends = 'godlygeek/tabular'
on_ft = 'markdown'

[[plugins]]
repository = 'tpope/vim-rails'
on_ft = ['ruby', 'eruby', 'css', 'scss', 'html', 'javascript', 'yaml']

[[plugins]]
repository = 'tpope/vim-rake'
on_ft = 'ruby'

[[plugins]]
repository = 'tpope/vim-rbenv'
on_ft = 'ruby'
on_cmd = 'Rbenv'

[[plugins]]
repository = 'tpope/vim-repeat'
on_map = '.'
on_func = 'repeat#set'

[[plugins]]
repository = 'tpope/vim-speeddating'
depends = 'tpope/vim-repeat'
on_map = ['<C-a>', '<C-x>']

[[plugins]]
repository = 'tpope/vim-surround'
depends = 'tpope/vim-repeat'
on_map = ['<Plug>Ysurround', '<Plug>Dsurround', '<Plug>Csurround']

[[plugins]]
repository = 'tsukkee/unite-help'
depends = 'Shougo/unite.vim'

[[plugins]]
repository = 'tyru/open-browser.vim'
on_cmd = 'OpenBrowser'

[[plugins]]
repository = 'tyru/restart.vim'
on_cmd = ['Restart', 'Restart!']
gui = 1

[[plugins]]
repository = 'Vim-R-plugin'
on_ft = 'R'

[[plugins]]
repository = 'wesQ3/vim-windowswap'
on_func = [
  'WindowSwap#MarkWindowSwap',
  'WindowSwap#DoWindowSwap',
  'WindowSwap#EasyWindowSwap',
]
