*neobundle.txt*	Ultimate Vim package manager

Version: 2.1
Author : Shougo <Shougo.Matsu at gmail.com>
License: MIT license  {{{
    Permission is hereby granted, free of charge, to any person obtaining
    a copy of this software and associated documentation files (the
    "Software"), to deal in the Software without restriction, including
    without limitation the rights to use, copy, modify, merge, publish,
    distribute, sublicense, and/or sell copies of the Software, and to
    permit persons to whom the Software is furnished to do so, subject to
    the following conditions:
    The above copyright notice and this permission notice shall be included
    in all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
    OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
    IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
    CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
    TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
    SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
}}}

CONTENTS					*neobundle-contents*

Introduction		|neobundle-introduction|
Usage			|neobundle-usage|
Install			|neobundle-install|
Interface		|neobundle-interface|
  Functions		  |neobundle-functions|
  Commands		  |neobundle-commands|
  Variables		  |neobundle-variables|
Configulation Examples	|neobundle-examples|
Unite sources		|neobundle-unite-sources|
FAQ			|neobundle-faq|
Changelog		|neobundle-changelog|

==============================================================================
INTRODUCTION					*neobundle-introduction*

*neobundle.vim* is the ultimate Vim package manager. This plugin is based on
Vundle.vim(https://github.com/gmarik/vundle), But I added some features.

For example:
 * Uses |vimproc| when you have it
 * |unite.vim| interface
 * Revision lock
 * Supports svn/Mercurial repository
 * Specify base path

==============================================================================
USAGE						*neobundle-usage*

Refer to setting examples:
|neobundle-examples|

To update, run this command.
>
	:NeoBundleUpdate
<
Note: To use unite.vim interface, use this command (required |vimproc| and
|unite.vim| plugins).
>
	:Unite neobundle/update
<
This plugin setting is compatible with Vundle.vim :-)

You can search popular plugins and add neobundle settings using Vimpusher web
service(Registration is required).
	http://www.vimpusher.com/
Or using vim-scripts.org.
	http://vim-scripts.org/

Neobundle implemented search plugins system from vim.org scripts (|unite.vim|
is required).
>
	:Unite neobundle/search
<
==============================================================================
INSTALL						*neobundle-install*

In first, git clone from the repository.

Note: git command is required.
>
	$ mkdir -p ~/.vim/bundle
	$ git clone git://github.com/Shougo/neobundle.vim ~/.vim/bundle/neobundle.vim
<
And a path to the repository directory.
>
	set runtimepath+={path to neobundle directory}
<
Example:
>
	set runtimepath+=~/.vim/bundle/neobundle.vim
<
And configure neobundles. (Refer to |neobundle-examaples|)

To install plugins, you must execute |:NeoBundleInstall| command.
>
	$ vim +NeoBundleInstall +q
<
==============================================================================
INTERFACE					*neobundle-interface*

------------------------------------------------------------------------------
FUNCTIONS 					*neobundle-functions*

neobundle#rc([{base-path}])			*neobundle#rc()*
		Initialize neobundle.vim. {base-path} is neobundle downloaded
		file base path.
		If omit {base-path}, neobundle searches "bundle" directory from
		default 'runtimepath'.
>
	set nocompatible
	filetype off
	set runtimepath+={path to neobundle directory}
	call neobundle#rc(expand('~/.vim/bundle'))
	
	NeoBundle 'git://github.com/Shougo/neocomplcache-clang.git'
	
	filetype plugin indent on
<
neobundle#source({bundle-names})		*neobundle#source()*
		Same to |:NeoBundleSource|.
		{bundle-names} is bundle name list.

neobundle#exists_not_installed_bundles()
				*neobundle#exists_not_installed_bundles()*
		Checks if exists not installed bundles.

neobundle#get_not_installed_bundle_names()
				*neobundle#get_not_installed_bundle_names()*
		Returns not installed bundle names.

neobundle#is_installed({bundle-name})
				*neobundle#is_installed()*
		Checks if {bundle-name} bundle is installed.

------------------------------------------------------------------------------
COMMANDS 					*neobundle-commands*

:NeoBundle {repository} [[,{revision}] [,{dictionary}]]
						*:NeoBundle*
		Configures neobundle.
		The {repository} is repository URI.  The {revision} is
		revision or branch name. If omitted it, use current latest
		revision.
		Note: You don't set neobundle setting in .gvimrc!
		Note: If you omit the protocol(ex: git or https) in git type,
		|g:neobundle_default_git_protocol| is used.

		Note: If you manage neobundle by neobundle, it may be error
		occurred when update neobundle.

		The {dictionary} has following keys:

		rev			(String)
		Revision number or branch/tag name.

		directory		(String)
		Relative directory path from base directory(set by
		|neobundle#rc()|).

		tail_path		(Number)
		If it is 1, neobundle add the path to the end of user
		runtimepath. It is useful not to overwritten user scripts by
		neobundle.

		base			(String)
		Directory base path. If you omit it, used |neobundle#rc()|
		base path. It is useful for loading scripts from different
		path.

		type			(String)
		Repository type.  If you omit repository type, it is detected
		automatically from {repository}.
		For example: nosync, git, svn, hg, ...

		site			(String)
		Repository site.  If you omit repository URL and site
		attribute, it is used |g:neobundle_default_site|.
		Note: You can specify site by "{site-name}:{path}" path.
		For example: "github:Shougo/vimshell"

		Available sites:
		"github" or "gh"    : github.com (git)
		"bitbucket" or "bb" : bitbucket.org (hg)

		rtp			(String)
		Specify runtime path.
		You may use this option when the repository has Vim plugin in
		sub directory.
		For example: https://github.com/rstacruz/sparkup

		depends			(List or String)
		Depends plugins list.
		List items are '{plugin-name}' or ['{plugin-name}', {args}].
		This plugins are installed automatically.
		Note: Type String is syntax sugar for List of {plugin-name}.

		build			(Dictionary)
		Specify build script.
		You may use this option when the plugin have to be built.
		This command is executed by |system()| or |vimproc#system()| in
		plugin runtimepath.
		For example: |vimproc|

		This dictionary has following keys:

			windows		(String)
			Specify Windows environment build script.

			mac		(String)
			Specify Mac OS X environment build script.

			cygwin		(String)
			Specify Cygwin environment build script.

			unix		(String)
			Specify Unix environment build script.

			others		(String)
			Specify others environment build script.

		augroup		(String)
		Specify augroup name in the plugin.
		Neobundle call |VimEnter| or |GUIEnter| autocmds automatically.
		Note: Some function define autocmds for |VimEnter| or
		|GUIEnter|.
		For example, "fugitive", "NERDTree", "session.vim".
		This attribute is valid in |:NeoBundleLazy|.

		Examples:			|:NeoBundle-examples|
>
		NeoBundle 'git_repository_uri'
		NeoBundle 'script_name'
		NeoBundle 'http://github.com/tpope/vim-fugitive.git'
		NeoBundle 'git://github.com/Shougo/unite.vim.git', {'directory' : 'unite'}
		NeoBundle 'git://host/path/repo.git', {'type': 'hg'}
		NeoBundle 'Shougo/neocomplcache', {'depends' :
		    \ [ 'Shougo/neocomplcache-snippets-complete.git',
		    \   ['rstacruz/sparkup', {'rtp': 'vim'}],
		    \ ]}
		NeoBundle 'Shougo/vimfiler',
		    \ {'depends' : 'Shougo/unite.vim' }
		NeoBundle 'github:Shougo/vimshell'

		" Pushable github repository.
		NeoBundle 'git@github.com:Shougo/neocomplcache.git'

		" For bitbucket svn repository.
		NeoBundle 'http://svn.macports.org/repository/macports/contrib/mpvim/'

		" For bitbucket hg repository.
		NeoBundle 'bitbucket:ns9tks/vim-fuzzyfinder'
		NeoBundle 'https://bitbucket.org/ns9tks/vim-fuzzyfinder'

		" For bitbucket git repository(.git is needed).
		NeoBundle 'bitbucket:kh3phr3n/vim-qt-syntax.git'
		NeoBundle 'https://bitbucket.org/kh3phr3n/vim-qt-syntax.git'
<
		Neobundle supports revision lock.
		Note: It's manual to restore its revision. Or, set to revision
		"master".
>
		NeoBundle 'Shougo/vimshell', '3787e5'
		NeoBundle 'Shougo/vimshell', 'master'
<
		If type is "nosync", neobundle does not update
		automatically(like pathogen.vim). Refer to |NeoBundleLocal|.
>
		NeoBundle 'muttator', {'type' : 'nosync', 'base' : '~/.vim/bundle'}
<
		Note: To use hg commands for git repository, please use this.
>
		NeoBundle 'git://github.com/Shougo/neobundle.vim.git', {'type': 'hg'}
<
:NeoBundleLocal {base-directory-path}		*:NeoBundleLocal*
		Likes pathogen.vim wrapper.  This command add
		{base-directory-path} directories in runtimepath.

		Note: If you want to use neobundle like pathogen.vim, you
		should set base path to separate from standard neobundle
		bundles paths.
>
		NeoBundleLocal ~/.vim/bundle

:NeoBundleInstall [{name}...]			*:NeoBundleInstall*
		Installs {name} plugins.
		If {name} is omited, all configured plugin is installed.
		Note: {name} is plugin name like "neobundle.vim". Not
		"Shougo/neobundle.vim".

:NeoBundleInstall! [{name}...]			*:NeoBundleInstall!*
		Installs and updates {name} plugins.
		If {name} is omited, all configured plugin is installed
		and updated.
		Note: {name} is plugin name like "neobundle.vim". Not
		"Shougo/neobundle.vim".

:NeoBundleUpdate [{name}...]			*:NeoBundleUpdate*
		Same to |:NeoBundleInstall!|.

:NeoBundleClean [{bang} [{name}...]] 	*:NeoBundleClean*
		Removes non configured plugins. If {bang} is added, force
		remove plugins. If {name} are added, remove
		{name} plugins.

:NeoBundleList 					*:NeoBundleList*
		Print list of configured neobundles.

:NeoBundleLog 					*:NeoBundleLog*
		Print previous all install logs.

:NeoBundleUpdatesLog 				*:NeoBundleUpdatesLog*
		Print previous update logs.

:NeoBundleLazy {repository} [, {dictionary}]	*:NeoBundleLazy*
:NeoExternalBundle {repository} [, {dictionary}]
						*:NeoExternalBundle*
		This command register neobundle, but don't add to
		'runtimepath'.
		Note: |:NeoExternalBundle| is deprecated name.
>
		NeoBundleLazy 'The-NERD-tree', {'augroup' : 'NERDTree'}
		NeoBundleSource The-NERD-tree
<
:NeoBundleSource [{name}...]			*:NeoBundleSource*
		|:source| {name} plugins.
		If omit {name}, |:source| all lazy plugins.
		Note: This command is used to load the neobundles configured by
		|:NeoBundleLazy|.

:NeoBundleDepends {repository} [, {dictionary}]	*:NeoBundleDepends*
		This command register neobundle and install the plugin.  It is
		useful to define Vim plugin dependency.
		Note: This command is not overwritten user neobundle
		configuration.
>
		if exists(':NeoBundleDepends')
		  NeoBundleDepends 'Shougo/unite.vim.git'
		endif
<
------------------------------------------------------------------------------
VARIABLES 					*neobundle-variables*

g:neobundle_default_site		*g:neobundle_default_site*
		The default repository site if site attribute is omitted.

		Default value is "github".

g:neobundle_log_filename			*g:neobundle_log_filename*
		The filename of outputting log. If it is "", don't output log
		to file.

		Default value is "".

g:neobundle_enable_tail_path			*g:neobundle_enable_tail_path*
		If it is 1, default "tail_path" attribute will be 1 in bundle.

		Default value is 0.

g:neobundle_rm_command				*g:neobundle_rm_command*
		The remove file command in |:NeoBundleClean|.

		Default value is "rmdir /S /Q" in Windows or "rm -rf" in
		others.

g:neobundle_default_git_protocol	*g:neobundle_default_git_protocol*
		The default protocol used for git(github).
		Note: If you must use proxy server, you may change the value
		to "https".

		Default value is "git".

g:neobundle_default_hg_protocol		*g:neobundle_default_hg_protocol*
		The default protocol used for hg(bitbucket).

		Default value is "https".

g:unite_source_neobundle_install_max_processes
			*g:unite_source_neobundle_install_max_processes*
		The max processes number in neobundle/install source
		asyncronous update.

		Default value is "5".

g:neobundle#types#git#get_revision_number_command
			*g:neobundle#types#git#get_revision_number_command*
		It is the command type git uses for get revision number.

		Default value is "git log -1 --pretty=format:'%h [%cr] %s'".

==============================================================================
EXAMPLES					*neobundle-examples*
>
	set nocompatible                " Recommend
	filetype off                    " Required!
	
	if has('vim_starting')
	  set runtimepath+={path to neobundle directory}
	endif
	
	call neobundle#rc(expand('~/.vim/bundle'))
	
	" Let neobundle manage neobundle
	"NeoBundle 'Shougo/neobundle.vim'
	
	" My Bundles here:
	" Refer to |:NeoBundle-examaples|.
	" Note: You don't set neobundle setting in .gvimrc!

	" ...

	filetype plugin indent on       " required!

	" Installation check.
	if neobundle#exists_not_installed_bundles()
	  echomsg 'Not installed bundles : ' .
	        \ string(neobundle#get_not_installed_bundle_names())
	  echomsg 'Please execute ":NeoBundleInstall" command.'
	  "finish
	endif
<
==============================================================================
UNITE SOURCES						*neobundle-unite-sources*

Here let me explain about a source for |unite| provided in neobundle.

							*neobundle-unite-source-neobundle*
neobundle
		Nominates bundles as a candidate.
		Note: This source requires |vimproc| plugin.
		
		Note: In windows
		If argment is bang(!), print plugins path instead of plugins status.
		Note: Others
		If argment is bang(!), print plugins status instead of plugins path.
		
		http://github.com/Shougo/vimproc

							*neobundle-unite-source-neobundle-install*
neobundle/install
		Install configured plugins asyncronously.
		Note: This source requires |vimproc| plugin.
		http://github.com/Shougo/vimproc

		If argment is bang(!), install and update all plugins.

		Source arguments:
		bundle names.

		Example:
>
		:Unite neobundle/install:!
		:Unite neobundle/install:neocomplcache
		:Unite neobundle/install:neocomplcache:unite.vim
<
		If you use the source with "-auto-quit" option, the unite
		buffer will close automatically.
>
		:Unite neobundle/install -auto-quit
<
							*neobundle-unite-source-neobundle-log*
neobundle/log
		Print previous neobundle install logs.

							*neobundle-unite-source-neobundle-update*
neobundle/update
		Install and update configured plugins asyncronously.
		Note: This source is same to "neobundle/intall:!" source.
		Note: This source requires |vimproc| plugin.

		If you use the source with "-auto-quit" option, the unite
		buffer will close automatically.
>
		:Unite neobundle/update -auto-quit
<
							*neobundle-unite-source-neobundle-search*
neobundle/search
		Search plugins settings from "http://vim-scripts.org/".
		Note: This source requires "curl" or "wget" command.
		Note: If you get errors in this source, please re-make cache
		file by |<Plug>(unite_redraw)|.

							*neobundle-unite-source-neobundle-lazy*
neobundle/lazy
		List lazy configured plugins(not sourced by |:NeoBundleSource|).

							*unite-kind-neobundle*
neobundle		An interface for neobundle bundles. It is used in
			neobundle source and neobundle/lazy sources.
	update		Update bundles(Default action)
	delete		Delete bundles
	preview		view the plugin documentation
	reinstall	Reinstall bundles
	narrow		Narrow bundle files
	edit		Browse bundle directory
	start		Browse github plugin page

Actions of each sources

neobundle/search				*unite-action-neobundle-search*
	yank		Yank plugin settings(Default action)
	start		Browse github plugin page

neobundle/lazy					*unite-action-neobundle-lazy*
	source		Source plugin files(Default action)

==============================================================================
FAQ						*neobundle-faq*

Q: I want to manage rsense Vim plugin using neobundle.
A: Unfortunately, rsense Vim has not plugin directory so neobundle cannot
manage it. But you can use vim-rsense instead.  It can be managed by
neobundle.

https://github.com/taichouchou2/vim-rsense
>
	NeoBundle 'taichouchou2/vim-rsense'
<
==============================================================================
CHANGELOG					*neobundle-changelog*

2012-09-23
- Added g:neobundle#types#git#get_revision_number_command option.

2012-09-21
- Improved neobundle#config#search() behavior.
- Improved neobundle/search source.
- Ignore error in :NeoBundleSource.

2012-09-19
- Ignore case in completion.

2012-09-13
- Added FAQ section.

2012-09-12
- Improved neobundle/search source.

2012-09-10
- Improved documentation.

2012-09-09
- Added test.
- Improved documentation.
- Added tail_path option.
- Added g:neobundle_enable_tail_path option.

2012-09-08
- Added :NeoBundleUpdatesLog command.

2012-09-01
- Added encoding conversion in neobundle/install source.
- Added neobundle#is_installed().
- Changed neobundle#exists_not_installed_bundles() and
  neobundle#get_not_installed_bundle_names().

2012-08-30
- Added preview action in neobundle source.
- Added neobundle kind.

2012-08-29
- Improved executable() check.
- Improved error message.
- Improved documentation.

2012-08-28
- Added bitbucket git repository test.
- Fixed :NeoBundleInstall.

2012-08-27
- Improved error check in :NeoBundleUpdate.
- Improved documentation.

2012-08-25
- Added g:neobundle_default_site option.
- Added g:neobundle_default_hg_protocol option.

2012-08-24
- Added initilization check in .gvimrc.
- Fixed neobundle#config#is_sourced().
- Fixed :NeoBundleDepends.
- Fixed get revision.

2012-08-23
- Improved updated log.
- Added g:neobundle_log_filename option.

2012-08-22
- Improved redraw behavior.
- Added :NeoBundleDepends command.

2012-08-18
- Added :NeoBundleLocal command.
- Improved documentation.
- Improved update.
- Added installation check.
- Fixed parse type.
- Fixed update.

2012-08-17
- Implemented asyncronous update.
- Added g:unite_source_neobundle_install_max_processes option.
- Improved neobundle/update source.
- Improved documentation.
- Improved types.
- Fixed for error message.
- Improved cd to bundle path.

2012-08-16
- Fixed get_last_status() error.
- Fixed subversion lock command.

2012-08-15
- Deleted filetype plugin indent off.

2012-08-14
- Ver.2.1 development is started.

------------------------------------------------------------------------------
ChangeLog neobundle 2.0:

2012-08-11
- Improved error message.
- Improved neobundle#config#get_neobundles().
- Added nosync type.
- Improved documentation.
- Fixed uri parse.

2012-08-08
- Fixed documentation.
- Deleted vital.
- Fixed :NeoBundleInstall behavior.
- Reduced runtimepath.
- Improved reload behavior.

2012-08-07
- Fixed neobundle config problem.

2012-08-05
- Fixed typo.

2012-08-03
- Added version check.

2012-07-25
- Improved vcs types.

2012-07-24
- Renamed vcs to types.
- Added vesting tests.

2012-07-23
- Added depends.
- Improved for repository errors.
- Added vcs files.

2012-07-22
- Fixed documentation.

2012-07-18
- Fixed documentation.

2012-07-12
- Improved chomp behavior.

2012-07-08
- Improved installer.
- Fixed for new git.

2012-06-23
- Fixed s:neobundle_dir problem.

2012-06-17
- Added .gitignore.
- Improved neobundle sources behavior.

2012-06-07
- Added augroup attribute.

2012-06-06
- Improved neobundle#rc() behavior.

2012-06-02
- Added .git suffix.

2012-05-20
- Fixed reinstall error.

2012-05-16
- Improved :NeoBundleSource behavior.
- Deleted :NeoBundleFileTypeSource command.

2012-05-14
- Added :NeoBundleFileTypeSource command.

2012-05-13
- Fixed tags error.
- Improved reload behavior.
- Fixed :NeoBundleLazy.
- Added neobundle/lazy source.
- Fixed :NeoBundleExternal.
- Added test.
- Improved :NeoBundleSource.

2012-05-12
- Added NeoBundleLazy and NeoBundleSource command.
- Improved command implementation.
- Fixed NeoBundleSource behavior.

2012-05-06
- Improved neobundle source.

2012-05-03
- Added build option.
- Improved test.
- Improved revision lock behavior.
- Added neobundle/search source.
- Added start action.

2012-05-02
- Added g:neobundle_rm_command option.

2012-04-28
- Updated vital.

2012-04-25
- Improved :NeoBundleClean behavior.
- Added test.

2012-04-22
- Ver.2.0 development is started.
- Implemented :NeoBundleClean completion.
- Improved reload behavior.

------------------------------------------------------------------------------
ChangeLog neobundle 1.0:

2012-04-21
- Ver.1.0.
- Fixed documentation.

2012-04-19
- Fixed examples.

2012-04-17
- Updated documentation.
- Added base attribute.

2012-04-13
- Added g:neobundle_default_git_protocol variable.

2012-03-27
- Added neobundle/update source.
- Improved log.

2012-03-26
- Improved :NeoBundleInstall behavior.
- Improved neobundle/install source.
- Added :NeoBundleUpdate command.
- Implemented completion.

2012-03-03
- Improved documentation.

2012-02-24
- Fixed :NeoBundleInstall bug.

2012-02-16
- Fixed neobundle initialization.

2012-02-15
- Added neobundle#installer#has_vimproc().

2012-01-17
- Added Vimpusher web service description.

2012-01-11
- Fixed :NeoBundleClean bug.
- Comment line is allowed.
- Improved :NeoBundle parse.
- Fixed example.

2012-01-08
- Fixed clean eror.

2012-01-06
- Improved neobundle source view.
- Improved neobundle source behavior.
- Improved :NeoBundleClean behavior.

2012-01-05
- Fixed expand() problem.
- Improved neobundle source.

2012-01-03
- Added source completion.
- Improved neobundle/install source behavior.

2011-12-31
- Improved neobundle initialize.

2011-12-21
- Fixed substitute path separator.
- Improved use vital module.
- Don't independent unite.

2011-12-20
- Added edit and narrow action.

2011-12-19
- Added NeoExternalBundle command.

2011-12-07
- Improved assume protocols.

2011-12-06
- Improved option parse.

2011-12-02
- Improved reload.

2011-11-25
- Fixed for Mercurial.

2011-11-21
- Added README.

2011-11-18
- Improved installer.
- Improved examples.
- Added :NeoBundleList command.
- Fixed neobundle source error.

2011-11-17
- Improved parse name.
- Fixed parse config.

2011-11-16
- Reload autoload scripts.

2011-11-15
- Improved nosync.
- Implemented plugins reload.

2011-11-10
- Fixed parse bug.

2011-11-04
- Added :NeoBundleLog command.
- Added neobundle/log source.
- Improved log.
- Fixed for Vim 7.2.
- Fixed helptags error.
- Improved error message.

2011-11-02
- Fixed helptags.

2011-11-01
- Use git protocol instead of https.

2011-10-28
- Fixed :NeoBundleInstall error.
- Use --rebase.
- Supported change dicretory name.
- Improved documentation.

2011-10-26
- Improved lock revision.
- Fixed sync.

2011-10-25
- Improved install message.
- Fixed lock revision.

2011-10-23
- Fixed vimproc check.
- Improved neobundle/install source status messages.

2011-10-19
- Fixed documentation.
- Improved NeoBundleClean.
- Fixed :NeoBundleInstall bug.
- Improved :NeoBundleClean.
- Improved detect error.
- Added neobundle source.

2011-10-18
- Refactored.
- Fixed examples.

2011-10-17
- Improved neobundle source.

2011-10-06
- Supported revision.

2011-09-25
- Supported Subversion and Mercurial.

2011-09-24
- Fixed parse name.

2011-09-19
- Refactored local variable names.
- Fixed installer.

2011-09-18
- Added documentation.

==============================================================================
vim:tw=78:ts=8:ft=help:norl:noet:fen:fdl=0:
