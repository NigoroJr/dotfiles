# Prompt
# vim: foldmethod=marker ft=zsh

autoload colors
colors

autoload -U add-zsh-hook
add-zsh-hook precmd random_colored_prompt

get_git_prompt() {  # {{{
    local prompt=""

    local branch_name=`git rev-parse --abbrev-ref HEAD 2>/dev/null`
    if [[ -z $branch_name ]]; then
        # Not in git repository
        return
    fi

    if [[ -z `git status --short 2>/dev/null` ]]; then
        # Clean
        echo "%F{046}$branch_name%f"
        return
    fi

    # Dirty

    # Total number of files
    #local files_changed=`git status --short | wc -l`
    #prompt+="%F{014}T%f$files_changed "

    # Number of staged files
    local staged_files="`git diff --cached --numstat | wc -l | tr -d ' '`"
    if [ "$staged_files" -ne 0 ]; then
        prompt+="%F{010}S%f$staged_files "
    fi

    # Number of modified files
    local modified_files="`git diff --numstat | wc -l | tr -d ' '`"
    if [ "$modified_files" -ne 0 ]; then
        prompt+="%F{009}M%f$modified_files "
    fi

    # Number of untracked files
    local untracked_files="`git status --short | grep '^\s*??' | wc -l | tr -d ' '`"
    if [ "$untracked_files" -ne 0 ]; then
        # prompt+="%F{226}U%f$untracked_files "
        prompt+="%F{099}U%f$untracked_files "
    fi

    local conflicts="`git status --short | grep '^\s*UU' | wc -l | tr -d ' '`"
    if [ "$conflicts" -ne 0 ]; then
        prompt+="%F{190}C%f$conflicts "
    fi

    if [[ -n "`git status | grep '^rebase in progress'`" ]]; then
        # Rebase is in progress
        prompt+="%F{039}REBASE%f"
    else
        prompt+="%F{197}$branch_name%f"
    fi

    echo $prompt
}   # }}}

random_colored_prompt() {

# Change hostname on remote login
local p_info=""
if [ -n "${REMOTEHOST}${SSH_CONNECTION}" ]; then
    p_info="%F{207}%m%f"
else
    p_info="%F{222}%m%f"
fi

# Arrow with random colors
valid_colors=({001..015} {022..051} {058..087} {094..159} {161..231} {242..255})
local random_index=$(( $RANDOM % ${#valid_colors[@]} ))
local signs="%F{${valid_colors[$random_index]}}->%f"

# username
p_info="$p_info$signs%F{45}%n%f"

# Arrow sign that changes color depending on return state of previous command
# Show double arrow if in tmux
local sign=' > '
if [[ -n $TMUX ]]; then
    sign='>> '
fi

p_info+="%0(?,%F{046}$sign%f,%20(?,%F{046}$sign%f,%F{009}$sign%f))"

# Display in two lines if too long
if [ "$pwd_length" -ge 45 ]; then
    PROMPT="[ %F{219}%~%f ]"$'\n'"$p_info"
else
    PROMPT="$p_info"
fi

# Right prompt
RPROMPT="[ %F{051}%~%f ]"

# Show git repository info
local git_prompt="`get_git_prompt`"
if [[ -n $git_prompt ]]; then
    RPROMPT+=" ($git_prompt)"
fi

}
